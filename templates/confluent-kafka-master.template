{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates a new VPC infrastructure for a Confluent Kafka reference architecture. **WARNING** This template creates Amazon EC2 instance and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "VPCCIDR",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR",
                        "RemoteAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Common Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "LinuxOSAMI",
                        "BootDiskSize"
                    ]
                },
                {
                    "Label": {
                        "default": "Broker Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "NumBrokers",
                        "BrokerNodeInstanceType",
                        "BrokerNodeStorage",
                        "BrokerNodeSpotPrice"
                    ]
                },
                {
                    "Label": {
                        "default": "Zookeeper Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "NumZookeepers",
                        "ZookeeperNodeInstanceType",
                        "ZookeeperNodeStorage",
                        "ZookeeperNodeSpotPrice"
                    ]
                },
                {
                    "Label": {
                        "default": "Worker Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "NumWorkers",
                        "WorkerNodeInstanceType",
                        "WorkerNodeStorage",
                        "WorkerNodeSpotPrice"
                    ]
                },
                {
                    "Label": {
                        "default": "Confluent Configuration"
                    },
                    "Parameters": [
                        "ClusterName",
                        "ConfluentEdition",
                        "ConfluentVersion",
                        "ConfluentSecurity"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "BootDiskSize": {
                    "default": "Boot Disk Capacity (GiB)"
                },
                "BrokerNodeInstanceType": {
                    "default": "Instance Type"
                },
                "BrokerNodeSpotPrice": {
                    "default": "Spot Price (optional)"
                },
                "BrokerNodeStorage": {
                    "default": "Persistent Storage"
                },
                "ClusterName": {
                    "default": "Cluster Name"
                },
                "ConfluentEdition": {
                    "default": "Confluent Edition"
                },
                "ConfluentSecurity": {
                    "default": "Secure Authentication"
                },
                "ConfluentVersion": {
                    "default": "Confluent Version"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "LinuxOSAMI": {
                    "default": "Linux Operating System AMI"
                },
                "NumBrokers": {
                    "default": "Broker count"
                },
                "NumWorkers": {
                    "default": "Worker count"
                },
                "NumZookeepers": {
                    "default": "Zookeeper count"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public Subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public Subnet 2 CIDR"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "RemoteAccessCIDR": {
                    "default": "Allowed External Access CIDR"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "WorkerNodeInstanceType": {
                    "default": "Instance Type"
                },
                "WorkerNodeSpotPrice": {
                    "default": "Spot Price (optional)"
                },
                "WorkerNodeStorage": {
                    "default": "Persistent Storage"
                },
                "ZookeeperNodeInstanceType": {
                    "default": "Instance Type"
                },
                "ZookeeperNodeSpotPrice": {
                    "default": "Spot Price (optional)"
                },
                "ZookeeperNodeStorage": {
                    "default": "Persistent Storage"
                }
            }
        }
    },
    "Parameters": {
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved and only 2 AZs are used for this deployment.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "BootDiskSize": {
            "ConstraintDescription": "Deployment supports 8 to 128 GB for boot volumes",
            "Default": "24",
            "Description": "Allocated EBS storage for boot disk",
            "MaxValue": "128",
            "MinValue": "8",
            "Type": "Number"
        },
        "BrokerNodeInstanceType": {
            "AllowedValues": [
                "m3.large",
                "m3.xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "i2.xlarge",
                "i2.2xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type.",
            "Default": "m4.xlarge",
            "Description": "Instance Type for Kafka brokers; select m3/m4 or i2 instance types for us-west-1 and sa-east-1",
            "Type": "String"
        },
        "BrokerNodeSpotPrice": {
            "AllowedPattern": "([0-9]{1}[.]{1}[0-9]{2})",
            "ConstraintDescription": "Must be decimal numeric value",
            "Default": "0.00",
            "Description": "Spot Price to bid for requested instances (0.00 will result in using on-demand instances)",
            "Type": "String"
        },
        "BrokerNodeStorage": {
            "ConstraintDescription": "No more than 1024 GiB per device (4 TiB per node).",
            "Default": "0",
            "Description": "Allocated EBS storage for each block device (in GiB; 4 devs per node); 0 indicates ephemeral storage only",
            "MaxValue": "1024",
            "MinValue": "0",
            "Type": "Number"
        },
        "ClusterName": {
            "AllowedPattern": "([A-Za-z]{1}[0-9A-Za-z_-]*)",
            "ConstraintDescription": "The ClusterName value must be alphanumeric",
            "Default": "awsqs",
            "Description": "Confluent Cluster ID",
            "Type": "String"
        },
        "ConfluentEdition": {
            "AllowedValues": [
                "Confluent Open Source",
                "Confluent Enterprise"
            ],
            "Default": "Confluent Enterprise",
            "Description": "Confluent Software Edition",
            "Type": "String"
        },
        "ConfluentSecurity": {
            "AllowedValues": [
                "Disabled",
                "Enabled"
            ],
            "Default": "Disabled",
            "Description": "Enable secure authentication for cluster access",
            "Type": "String"
        },
        "ConfluentVersion": {
            "AllowedValues": [
                "3.2.0",
                "3.1.2",
                "3.1.1"
            ],
            "ConstraintDescription": "Supported versions of Confluent Platform within AWS Marketplace",
            "Default": "3.1.1",
            "Description": "Confluent Software Version",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "Name of an existing EC2 key pair within the AWS region; all instances will launch with this key pair",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "LinuxOSAMI": {
            "AllowedValues": [
                "CentOS-7-HVM",
                "Ubuntu-Server-16.04-LTS-HVM",
                "Amazon-Linux-HVM"
            ],
            "ConstraintDescription": "Supported versions of Linux AMIs for Confluent deployments",
            "Default": "CentOS-7-HVM",
            "Description": "Operating system AMI for cluster instances; you MUST authorize access to the proper AMI at https://aws.amazon.com/marketplace",
            "Type": "String"
        },
        "NumBrokers": {
            "Default": "3",
            "Description": "Number of Kafka Brokers",
            "MaxValue": "9",
            "MinValue": "1",
            "Type": "Number"
        },
        "NumWorkers": {
            "Default": "0",
            "Description": "Number of Kafka Connect Workers",
            "MaxValue": "9",
            "MinValue": "0",
            "Type": "Number"
        },
        "NumZookeepers": {
            "AllowedValues": [
                "0",
                "1",
                "3",
                "5"
            ],
            "Default": "0",
            "Description": "Number of independent Zookeepers (if 0, zookeeper will be deployed on the Kafka brokers)",
            "Type": "String"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/20",
            "Description": "CIDR Block for the public DMZ subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.144.0/20",
            "Description": "CIDR Block for the public DMZ subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "quickstart-reference",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Default": "confluent/kafka/latest",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Type": "String"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for external access to cluster nodes",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR Block for the VPC",
            "Type": "String"
        },
        "WorkerNodeInstanceType": {
            "AllowedValues": [
                "m3.large",
                "m3.xlarge",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "i2.xlarge",
                "i2.2xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type.",
            "Default": "m4.xlarge",
            "Description": "Instance Type for Kafka Connect workers; select m3/m4 or i2 instance types for us-west-1 and sa-east-1",
            "Type": "String"
        },
        "WorkerNodeSpotPrice": {
            "AllowedPattern": "([0-9]{1}[.]{1}[0-9]{2})",
            "ConstraintDescription": "Must be decimal numeric value",
            "Default": "0.00",
            "Description": "Spot Price to bid for requested instances (0.00 will result in using on-demand instances)",
            "Type": "String"
        },
        "WorkerNodeStorage": {
            "ConstraintDescription": "No more than 1024 GiB per device (4 TiB per node).",
            "Default": "0",
            "Description": "Allocated EBS storage for each block device (in GiB; 4 devs per node); 0 indicates ephemeral storage only",
            "MaxValue": "1024",
            "MinValue": "0",
            "Type": "Number"
        },
        "ZookeeperNodeInstanceType": {
            "AllowedValues": [
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type.",
            "Default": "m4.large",
            "Description": "Instance Type for Zookeeper servers; select m3/m4 for us-west-1 and sa-east-1",
            "Type": "String"
        },
        "ZookeeperNodeSpotPrice": {
            "AllowedPattern": "([0-9]{1}[.]{1}[0-9]{2})",
            "ConstraintDescription": "Must be decimal numeric value",
            "Default": "0.00",
            "Description": "Spot Price to bid for requested instances (0.00 will result in using on-demand instances)",
            "Type": "String"
        },
        "ZookeeperNodeStorage": {
            "ConstraintDescription": "No more than 1024 GiB per device (4 TiB per node).",
            "Default": "0",
            "Description": "Allocated EBS storage for each block device (in GiB; 4 devs per node); 0 indicates ephemeral storage only",
            "MaxValue": "1024",
            "MinValue": "0",
            "Type": "Number"
        }
    },
    "Mappings": {
        "AWSInfoRegionMap": {
            "ap-northeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-northeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-south-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ca-central-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-central-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-west-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "sa-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-west-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            }
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "QSS3BucketName"
                            },
                            {
                                "Ref": "QSS3KeyPrefix"
                            },
                            "submodules/quickstart-aws-vpc",
                            "templates/aws-vpc.template"
                        ]
                    ]
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "CreatePrivateSubnets": "false",
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NumberOfAZs": "2",
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "ConfluentStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "QSS3BucketName"
                            },
                            {
                                "Ref": "QSS3KeyPrefix"
                            },
                            "templates/confluent-kafka.template"
                        ]
                    ]
                },
                "Parameters": {
                    "BootDiskSize": {
                        "Ref": "BootDiskSize"
                    },
                    "BrokerNodeInstanceType": {
                        "Ref": "BrokerNodeInstanceType"
                    },
                    "BrokerNodeSpotPrice": {
                        "Ref": "BrokerNodeSpotPrice"
                    },
                    "BrokerNodeStorage": {
                        "Ref": "BrokerNodeStorage"
                    },
                    "ClusterName": {
                        "Ref": "ClusterName"
                    },
                    "ConfluentEdition": {
                        "Ref": "ConfluentEdition"
                    },
                    "ConfluentSecurity": {
                        "Ref": "ConfluentSecurity"
                    },
                    "ConfluentVersion": {
                        "Ref": "ConfluentVersion"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "LinuxOSAMI": {
                        "Ref": "LinuxOSAMI"
                    },
                    "NumBrokers": {
                        "Ref": "NumBrokers"
                    },
                    "NumWorkers": {
                        "Ref": "NumWorkers"
                    },
                    "NumZookeepers": {
                        "Ref": "NumZookeepers"
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "SubnetID": {
                        "Fn::Join": [
                            ",",
                            {
                                "Fn::GetAtt": [
                                    "VPCStack",
                                    "Outputs.PublicSubnet1ID"
                                ]
                            },
                            {
                                "Fn::GetAtt": [
                                    "VPCStack",
                                    "Outputs.PublicSubnet2ID"
                                ]
                            }
                        ]
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "WorkerNodeInstanceType": {
                        "Ref": "WorkerNodeInstanceType"
                    },
                    "WorkerNodeSpotPrice": {
                        "Ref": "WorkerNodeSpotPrice"
                    },
                    "WorkerNodeStorage": {
                        "Ref": "WorkerNodeStorage"
                    },
                    "ZookeeperNodeInstanceType": {
                        "Ref": "ZookeeperNodeInstanceType"
                    },
                    "ZookeeperNodeSpotPrice": {
                        "Ref": "ZookeeperNodeSpotPrice"
                    },
                    "ZookeeperNodeStorage": {
                        "Ref": "ZookeeperNodeStorage"
                    }
                }
            }
        }
    }
}
