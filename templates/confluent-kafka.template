{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "CloudFormation template to deploy Confluent Platform on AWS",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Confluent Configuration"
                    },
                    "Parameters": [
                        "ClusterName",
                        "ConfluentEdition",
                        "ConfluentVersion",
                        "ConfluentSecurity"
                    ]
                },
                {
                    "Label": {
                        "default": "Core EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyName",
                        "LinuxOS",
                        "BootDiskSize",
                        "VpcSubnetId"
                    ]
                },
                {
                    "Label": {
                        "default": "Broker EC2 Configuration"
                    },
                    "Parameters": [
                        "NumBrokers",
                        "BrokerNodeType",
                        "BrokerNodeStorage",
                        "BrokerNodeSpotPrice"
                    ]
                },
                {
                    "Label": {
                        "default": "Zookeeper EC2 Configuration"
                    },
                    "Parameters": [
                        "NumZookeepers",
                        "ZookeeperNodeType",
                        "ZookeeperNodeStorage",
                        "ZookeeperNodeSpotPrice"
                    ]
                },
                {
                    "Label": {
                        "default": "Worker EC2 Configuration"
                    },
                    "Parameters": [
                        "NumWorkers",
                        "WorkerNodeType",
                        "WorkerNodeStorage",
                        "WorkerNodeSpotPrice"
                    ]
                }
            ],
            "ParameterLabels": {
                "ClusterName": {
                    "default": "Cluster Name"
                },
                "ConfluentEdition": {
                    "default": "Confluent Edition"
                },
                "ConfluentVersion": {
                    "default": "Confluent Version"
                },
                "ConfluentSecurity": {
                    "default": "Secure Authentication"
                },
                "KeyName": {
                    "default": "Key Pair Name"
                },
                "LinuxOS": {
                    "default": "Linux Operating System"
                },
                "BootDiskSize": {
                    "default": "Boot Disk Capacity (GB)"
                },
                "VpcSubnetId": {
                    "default": "VPC Subnet"
                },
                "NumBrokers": {
                    "default": "Broker count"
                },
                "BrokerNodeType": {
                    "default": "Instance Type"
                },
                "BrokerNodeStorage": {
                    "default": "Persistent Storage"
                },
                "BrokerNodeSpotPrice": {
                    "default": "Spot Price (optional)"
                },
                "NumZookeepers": {
                    "default": "Zookeeper count"
                },
                "ZookeeperNodeType": {
                    "default": "Instance Type"
                },
                "ZookeeperNodeStorage": {
                    "default": "Persistent Storage"
                },
                "ZookeeperNodeSpotPrice": {
                    "default": "Spot Price (optional)"
                },
                "NumWorkers": {
                    "default": "Worker count"
                },
                "WorkerNodeType": {
                    "default": "Instance Type"
                },
                "WorkerNodeStorage": {
                    "default": "Persistent Storage"
                },
                "WorkerNodeSpotPrice": {
                    "default": "Spot Price (optional)"
                }
            }
        }
    },
    "Parameters": {
        "BootDiskSize": {
            "ConstraintDescription": "Deployment supports 8 to 128 GB for boot volumes",
            "Default": "24",
            "Description": "Allocated EBS storage for boot disk",
            "MaxValue": "128",
            "MinValue": "8",
            "Type": "Number"
        },
        "BrokerNodeSpotPrice": {
            "AllowedPattern": "([0-9]{1}[.]{1}[0-9]{2})",
            "ConstraintDescription": "Must be decimal numeric value",
            "Default": "0.00",
            "Description": "Spot Price to bid for requested instances (0.00 will result in using on-demand instances)",
            "Type": "String"
        },
        "BrokerNodeStorage": {
            "ConstraintDescription": "No more than 1024 GB per device (4 TB per node).",
            "Default": "0",
            "Description": "Allocated EBS storage for each block device (in GB; 4 devs per node); 0 indicates ephemeral storage only",
            "MaxValue": "1024",
            "MinValue": "0",
            "Type": "Number"
        },
        "BrokerNodeType": {
            "AllowedValues": [
                "m3.large",
                "m3.xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "i2.xlarge",
                "i2.2xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type.",
            "Default": "d2.xlarge",
            "Description": "Instance Type for Kafka brokers; select m3/m4 or i2 instance types for us-west-1 and sa-east-1",
            "Type": "String"
        },
        "ClusterName": {
            "AllowedPattern": "([A-Za-z]{1}[0-9A-Za-z_-]*)",
            "ConstraintDescription": "The ClusterName value must be alphanumeric",
            "Default": "awsmk",
            "Description": "Confluent Cluster ID",
            "Type": "String"
        },
        "ConfluentEdition": {
            "AllowedValues": [
                "Confluent Platform",
                "Confluent Platform Enterprise"
            ],
            "Default": "Confluent Platform Enterprise",
            "Description": "Confluent Software Edition",
            "Type": "String"
        },
        "ConfluentSecurity": {
            "AllowedValues": [
                "Disabled",
                "Enabled"
            ],
            "Default": "Disabled",
            "Description": "Enable secure authentication for cluster access",
            "Type": "String"
        },
        "ConfluentVersion": {
            "AllowedValues": [
                "3.2.0-SNAPSHOT",
                "3.1.2",
                "3.1.1"
            ],
            "ConstraintDescription": "Supported versions of Confluent Platform within AWS Marketplace",
            "Default": "3.1.2",
            "Description": "Confluent Software Version",
            "Type": "String"
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair within the AWS account; all instances will launch with this KeyPair",
            "MinLength": "1",
            "Type": "String"
        },
        "LinuxOS": {
            "AllowedValues": [
                "CentOS-7.1",
                "Ubuntu-16.04",
                "AmazonLinux-2016.09"
            ],
            "ConstraintDescription": "Supported versions of Linux AMI's for Confluent deployments",
            "Default": "CentOS-7.1",
            "Description": "Operating system for cluster instances; you MUST authorize access to the proper AMI at https://aws.amazon.com/marketplace",
            "Type": "String"
        },
        "NumBrokers": {
            "Default": "3",
            "Description": "Number of Kafka Brokers",
            "MaxValue": "9",
            "MinValue": "1",
            "Type": "Number"
        },
        "NumWorkers": {
            "Default": "0",
            "Description": "Number of Kafka Connect Workers",
            "MaxValue": "9",
            "MinValue": "0",
            "Type": "Number"
        },
        "NumZookeepers": {
            "AllowedValues": [
                "0",
                "1",
                "3",
                "5"
            ],
            "Default": "0",
            "Description": "Number of independent Zookeepers (if 0, zookeeper deployed with Kafka brokers)",
            "Type": "String"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "quickstart-reference",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Default": "confluent/kafka/latest",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Type": "String"
        },
        "VpcSubnetId": {
            "AllowedPattern": "subnet-(\\w{8})",
            "ConstraintDescription": "must be a valid AWS subnet (subnet-xxxxxxx}",
            "Description": "VPC Subnet for cluster deployment; VPC must exist with proper configuration for Confluent cluster access {internal and external}",
            "Type": "String"
        },
        "WorkerNodeSpotPrice": {
            "AllowedPattern": "([0-9]{1}[.]{1}[0-9]{2})",
            "ConstraintDescription": "Must be decimal numeric value",
            "Default": "0.00",
            "Description": "Spot Price to bid for requested instances (0.00 will result in using on-demand instances)",
            "Type": "String"
        },
        "WorkerNodeStorage": {
            "ConstraintDescription": "No more than 1024 GB per device (4 TB per node).",
            "Default": "0",
            "Description": "Allocated EBS storage for each block device (in GB; 4 devs per node); 0 indicates ephemeral storage only",
            "MaxValue": "1024",
            "MinValue": "0",
            "Type": "Number"
        },
        "WorkerNodeType": {
            "AllowedValues": [
                "m3.large",
                "m3.xlarge",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "i2.xlarge",
                "i2.2xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type.",
            "Default": "m4.2xlarge",
            "Description": "Instance Type for Kafka Connect workers; select m3/m4 or i2 instance types for us-west-1 and sa-east-1",
            "Type": "String"
        },
        "ZookeeperNodeSpotPrice": {
            "AllowedPattern": "([0-9]{1}[.]{1}[0-9]{2})",
            "ConstraintDescription": "Must be decimal numeric value",
            "Default": "0.00",
            "Description": "Spot Price to bid for requested instances (0.00 will result in using on-demand instances)",
            "Type": "String"
        },
        "ZookeeperNodeStorage": {
            "ConstraintDescription": "No more than 1024 GB per device (4 TB per node).",
            "Default": "0",
            "Description": "Allocated EBS storage for each block device (in GB; 4 devs per node); 0 indicates ephemeral storage only",
            "MaxValue": "1024",
            "MinValue": "0",
            "Type": "Number"
        },
        "ZookeeperNodeType": {
            "AllowedValues": [
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type.",
            "Default": "m3.large",
            "Description": "Instance Type for Zookeeper servers; select m3/m4 for us-west-1 and sa-east-1",
            "Type": "String"
        }
    },
    "Mappings": {
        "AWSInfoRegionMap": {
            "ap-northeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-northeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-south-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ca-central-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-central-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-west-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "sa-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-west-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            }
        }
    },
    "Conditions": {
        "IndependentWorkers": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumWorkers"
                        },
                        "0"
                    ]
                }
            ]
        },
        "IndependentZookeepers": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumZookeepers"
                        },
                        "0"
                    ]
                }
            ]
        },
        "EnableWaitConditions": {
            "Fn::Equals": [
                "1",
                "1"
            ]
        }
    },
    "Resources": {
        "InstanceIAMRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "ec2:CreateTags",
                                        "ec2:DescribeInstances",
                                        "cloudformation:DescribeStackResources",
                                        "s3:Get*",
                                        "s3:List*"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ]
                        },
                        "PolicyName": "DescribeAccessEC2andCFN"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "InstanceProfile": {
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "InstanceIAMRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
        "BrokerStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "QSS3BucketName"
                            },
                            {
                                "Ref": "QSS3KeyPrefix"
                            },
                            "templates/nodegroup.template"
                        ]
                    ]
                },
                "Parameters": {
                    "ParentStackName": {
                        "Ref": "AWS::StackName"
                    },
                    "NodeDesignation": "broker",
                    "NumNodes": {
                        "Ref": "NumBrokers"
                    },
                    "NodeType": {
                        "Ref": "BrokerNodeType"
                    },
                    "NodeSpotPrice": {
                        "Ref": "BrokerNodeSpotPrice"
                    },
                    "PersistentStorage": {
                        "Ref": "BrokerNodeStorage"
                    },
                    "LinuxOS": {
                        "Ref": "LinuxOS"
                    },
                    "BootDiskSize": {
                        "Ref": "BootDiskSize"
                    },
                    "KeyName": {
                        "Ref": "KeyName"
                    },
                    "VpcSubnetId": {
                        "Ref": "VpcSubnetId"
                    },
                    "ClusterName": {
                        "Ref": "ClusterName"
                    },
                    "ConfluentEdition": {
                        "Ref": "ConfluentEdition"
                    },
                    "ConfluentSecurity": {
                        "Ref": "ConfluentSecurity"
                    },
                    "ConfluentVersion": {
                        "Ref": "ConfluentVersion"
                    },
                    "InstanceProfile": {
                        "Ref": "InstanceProfile"
                    },
                    "ClusterInfoHandle": {
                        "Ref": "ClusterInfoHandle"
                    },
                    "ScriptsURL": { 
                        "Fn::Join": [ "/",
                            [ 
                                { "Fn::FindInMap": [ 
                                    "AWSInfoRegionMap", 
                                    { "Ref": "AWS::Region" }, 
                                    "QuickStartS3URL" 
                                ] },
                                { "Ref": "QSS3BucketName" }, 
                                { "Ref": "QSS3KeyPrefix" }, 
                                "scripts"
                            ]
                         ] 
                     }
                }
            }
        },
        "ZookeeperStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Condition": "IndependentZookeepers",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "QSS3BucketName"
                            },
                            {
                                "Ref": "QSS3KeyPrefix"
                            },
                            "templates/nodegroup.template"
                        ]
                    ]
                },
                "Parameters": {
                    "ParentStackName": {
                        "Ref": "AWS::StackName"
                    },
                    "NodeDesignation": "zookeeper",
                    "NumNodes": {
                        "Ref": "NumZookeepers"
                    },
                    "NodeType": {
                        "Ref": "ZookeeperNodeType"
                    },
                    "NodeSpotPrice": {
                        "Ref": "ZookeeperNodeSpotPrice"
                    },
                    "PersistentStorage": {
                        "Ref": "ZookeeperNodeStorage"
                    },
                    "LinuxOS": {
                        "Ref": "LinuxOS"
                    },
                    "BootDiskSize": {
                        "Ref": "BootDiskSize"
                    },
                    "KeyName": {
                        "Ref": "KeyName"
                    },
                    "VpcSubnetId": {
                        "Ref": "VpcSubnetId"
                    },
                    "ClusterName": {
                        "Ref": "ClusterName"
                    },
                    "ConfluentEdition": {
                        "Ref": "ConfluentEdition"
                    },
                    "ConfluentSecurity": {
                        "Ref": "ConfluentSecurity"
                    },
                    "ConfluentVersion": {
                        "Ref": "ConfluentVersion"
                    },
                    "InstanceProfile": {
                        "Ref": "InstanceProfile"
                    },
                    "ClusterInfoHandle": {
                        "Ref": "ClusterInfoHandle"
                    },
                    "ScriptsURL": { 
                        "Fn::Join": [ "/",
                            [ 
                                { "Fn::FindInMap": [ 
                                    "AWSInfoRegionMap", 
                                    { "Ref": "AWS::Region" }, 
                                    "QuickStartS3URL" 
                                ] },
                                { "Ref": "QSS3BucketName" }, 
                                { "Ref": "QSS3KeyPrefix" }, 
                                "scripts"
                            ]
                         ] 
                    }
                }
            }
        },
        "WorkerStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Condition": "IndependentWorkers",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "QSS3BucketName"
                            },
                            {
                                "Ref": "QSS3KeyPrefix"
                            },
                            "templates/nodegroup.template"
                        ]
                    ]
                },
                "Parameters": {
                    "ParentStackName": {
                        "Ref": "AWS::StackName"
                    },
                    "NodeDesignation": "worker",
                    "NumNodes": {
                        "Ref": "NumWorkers"
                    },
                    "NodeType": {
                        "Ref": "WorkerNodeType"
                    },
                    "NodeSpotPrice": {
                        "Ref": "WorkerNodeSpotPrice"
                    },
                    "PersistentStorage": {
                        "Ref": "WorkerNodeStorage"
                    },
                    "LinuxOS": {
                        "Ref": "LinuxOS"
                    },
                    "BootDiskSize": {
                        "Ref": "BootDiskSize"
                    },
                    "KeyName": {
                        "Ref": "KeyName"
                    },
                    "VpcSubnetId": {
                        "Ref": "VpcSubnetId"
                    },
                    "ClusterName": {
                        "Ref": "ClusterName"
                    },
                    "ConfluentEdition": {
                        "Ref": "ConfluentEdition"
                    },
                    "ConfluentSecurity": {
                        "Ref": "ConfluentSecurity"
                    },
                    "ConfluentVersion": {
                        "Ref": "ConfluentVersion"
                    },
                    "InstanceProfile": {
                        "Ref": "InstanceProfile"
                    },
                    "ClusterInfoHandle": {
                        "Ref": "ClusterInfoHandle"
                    },
                    "ScriptsURL": { 
                        "Fn::Join": [ "/",
                            [ 
                                { "Fn::FindInMap": [ 
                                    "AWSInfoRegionMap", 
                                    { "Ref": "AWS::Region" }, 
                                    "QuickStartS3URL" 
                                ] },
                                { "Ref": "QSS3BucketName" }, 
                                { "Ref": "QSS3KeyPrefix" }, 
                                "scripts"
                            ]
                         ] 
                    }
                }
            }
        },
        "ClusterInfoHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "ClusterInfoCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "Condition": "EnableWaitConditions",
            "DependsOn": "BrokerStack",
            "Properties": {
                "Handle": {
                    "Ref": "ClusterInfoHandle"
                },
                "Timeout": "120",
                "Count": "1"
            }
        }
    },
    "Outputs": {
        "ClusterInfo": {
            "Condition": "EnableWaitConditions",
            "Description": "Confluent Control Center URL and Login",
            "Value": {
                "Fn::GetAtt": [
                    "ClusterInfoCondition",
                    "Data"
                ]
            }
        },
        "Subnet": {
            "Value": {
                "Ref": "VpcSubnetId"
            }
        }
    }
}
